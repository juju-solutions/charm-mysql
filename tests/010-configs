#!/usr/bin/python3

import amulet

try:
    import pymysql
except ImportError:
    import pymysql3


max_connections = 30

d = amulet.Deployment(series='trusty')

d.add('mysql')
d.expose('mysql')

try:
    d.setup(timeout=900)
    d.sentry.wait()
except amulet.helpers.TimeoutError:
    amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")

d.configure('mysql', {'max-connections': max_connections})
d.sentry.wait()

# Allow connections from outside
mysqlmaster = d.sentry['mysql'][0]
mysqlmaster.run(
    "echo 'GRANT ALL ON *.* to root@\"%\"'\""
    " IDENTIFIED BY '`cat /var/lib/mysql/mysql.passwd`'\"|"
    "mysql -u root --password=`cat /var/lib/mysql/mysql.passwd`"
)
mysql_server = d.sentry['mysql'][0]
mysql_password = mysql_server.file_contents('/var/lib/mysql/mysql.passwd')

# As we are using root as test user, we need to test with max_conn + 1
try:
    cnx = pymysql.connect(
        user='root',
        password=mysql_password,
        host=mysql_server.info['public-address'],
        database='mysql')
except:
    amulet.raise_status(amulet.FAIL, msg='Unable to connect to MySQL')
else:
    cnx.close()

cnf = mysql_server.file_contents('/etc/mysql/my.cnf')

if 'max_connections = 30' not in cnf.split('\n'):
    amulet.raise_status(amulet.FAIL, msg='Not writing configuration file properly')
